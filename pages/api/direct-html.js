/**
 * Direct HTML handler with no dependencies (pages/api version)
 * Returns a complete HTML page for Warpcast Frame
 */

export default function handler(req, res) {
  try {
    // Set CORS headers
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Content-Type', 'text/html');
    
    // Determine what to show based on the button clicked
    const buttonIndex = req.body?.untrustedData?.buttonIndex || 0;
    
    // Change the image based on which button was clicked
    let imageText = "Pages+API+Frame";
    let mainText = "Pages API Response";
    
    if (buttonIndex === 1) {
      imageText = "24h+Data+View";
      mainText = "24-Hour Data View";
    } else if (buttonIndex === 2) {
      imageText = "7d+Data+View";
      mainText = "7-Day Data View";
    } else if (buttonIndex === 3) {
      imageText = "Share+View";
      mainText = "Share View";
    }
    
    // Generate a frame HTML response
    const html = `
<!DOCTYPE html>
<html>
<head>
  <meta property="fc:frame" content="vNext">
  <meta property="fc:frame:image" content="https://placehold.co/1200x630/1e293b/FFFFFF?text=${imageText}">
  <meta property="fc:frame:button:1" content="24h Data">
  <meta property="fc:frame:button:2" content="7d Data">
  <meta property="fc:frame:button:3" content="Share">
  <meta property="fc:frame:post_url" content="https://warplet-traders.vercel.app/api/direct-html">
</head>
<body>
  <h1>${mainText}</h1>
  <p>This response was generated by the pages/api/direct-html.js handler</p>
</body>
</html>
    `;
    
    // Return the HTML frame
    return res.status(200).send(html);
  } catch (error) {
    // Fallback HTML response
    const fallbackHtml = `
<!DOCTYPE html>
<html>
<head>
  <meta property="fc:frame" content="vNext">
  <meta property="fc:frame:image" content="https://placehold.co/1200x630/1e293b/FFFFFF?text=Fallback+Frame">
  <meta property="fc:frame:button:1" content="Retry">
  <meta property="fc:frame:post_url" content="https://warplet-traders.vercel.app/api/direct-html">
</head>
<body>
  <h1>Fallback Response</h1>
  <p>Error: ${error.message || 'Unknown error'}</p>
</body>
</html>
    `;
    
    // Always return a 200 status even for errors to keep the frame working
    return res.status(200).send(fallbackHtml);
  }
}